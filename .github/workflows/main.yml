name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Changed Files
        id: changedFiles
        uses: jitterbit/get-changed-files@v1
        with:
          format: "json"
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: modified-crawlers
        uses: actions/github-script@v6
        env:
          ADDED_MODIFIED_FILES: ${{ steps.changedFiles.outputs.added_modified }}
          RENAMED_FILES: ${{ steps.changedFiles.outputs.renamed }}
        with:
          script: |
            try {
              const fs = require('fs/promises');

              // Identify modified files
              const { ADDED_MODIFIED_FILES, RENAMED_FILES } = process.env;
              const addedModifiedFilesArray = JSON.parse(ADDED_MODIFIED_FILES);
              const renamedFilesArray = JSON.parse(RENAMED_FILES); 
              const filesArray = [...addedModifiedFilesArray, ...renamedFilesArray];

              // if(!filesArray.find(file => file.match(/^change.txt/))){
              //     throw new Error('changelog file has not been updated');
              // }

             //  console.log(${{steps.changedFiles.outputs.modified}}.includes('change.txt'));
             addedModifiedFilesArray.forEach(file => {console.log(file.match(/change\.md$/));});
              //if(${{steps.changedFiles.outputs.modified}}.find(file => file.match(/^app.test.js/))){
              //  console.log('changelog file has not been updated');
              //}

              //console.log(addedModifiedFilesArray);
              
            } catch (err) {
              core.setFailed(err.message);
            }
